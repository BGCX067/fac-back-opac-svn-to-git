# this contains the basic configuration for the MARC indexer.
# valid types = single, multi, singleTranslate

active.fields = addedauthor,audience,bib_num,collection,contents,era,format,genre,isbn,language,location,mainauthor,notes,performer,place,pubdate,publisher,pubplace,series,subjectentity,subjectname,summary,title,topic,url,vernacular
# REMOVED BECAUSE THEY'RE NOT ACTUALLY USEFUL: deweyclass,deweycentury,


addedauthor.type= multi
addedauthor.marcMap = 700$ac,720$a
#addedauthor.stripTrailingCommas = 1
addedauthor.stripTrailingPunctuation = 1

audience.type = singleTranslation
audience.marcMap = 008/22
audience.translationMap = AUDIENCE_CODING_MAP

mainauthor.type = multi
mainauthor.marcMap = 100$ac,110$ab
mainauthor.stripTrailingPunctuation = 1
#was ,700$ac
# NB. not including 100$d because it creates weird duplications of names.
#author.marcMap.lastResort = 245$c
# todo: figure out if the statement of responsibility does need to be there for a last resort (it works terrible for movies)
# or maybe should be tossed in the "performer" category or whatever.
#mainauthor.stripTrailingCommas = 1

bibcall.type = single
bibcall.marcMap = 092$a

bib_num.type=single
bib_num.marcMap = 001/0:99,999$a
bib_num.stripWhitespace = 1
bib_num.processor = bibNumProcessor

collection.type = multi
collection.marcMap = 949$c

contents.type = multi
contents.marcMap = 505$a,505$t

#deweycentury.type = multi
#deweycentury.marcMap = 949$d
#deweycentury.processor = deweyCenturyProcessor

#deweyclass.type = multi
#deweyclass.marcMap = 949$d
#deweyclass.processor = deweyClassProcessor

era.type = multi
era.marcMap = 650$y,651$y
era.stripTrailingPunctuation = 1

format.type = single
format.processor = formatProcessor

genre.type= multi
genre.processor = genreProcessor
genre.stripTrailingPunctuation = 1

isbn.type = single
isbn.marcMap = 020$a

language.type= singleTranslation
language.marcMap = 008/35:38
language.translationMap = LANGUAGE_CODING_MAP

location.type = multi
location.marcMap = 949$m
location.stripTrailingPunctuation = 1

notes.type = multi
notes.marcMap = 500$a,538$a,856$z

performer.type = multi
performer.marcMap = 511$a
performer.stripTrailingCommas = 1

place.type = multi
place.marcMap = 651$a,650$z
place.stripTrailingPunctuation = 1

pubdate.type = single
pubdate.processor = pubdateProcessor
pubdate.marcMap = 260$c

publisher.type = single
publisher.marcMap = 260$b
publisher.stripTrailingPunctuation = 1

pubplace.type = single
pubplace.marcMap = 260$a
pubplace.stripTrailingPunctuation = 1

series.type = single
series.marcMap = 440$a
series.stripTrailingPunctuation = 1
#was ,490$a
# TODO: decide whether 800 fields contain what a non-librarian would consider series info ("Government Printing Office.  GPO publication" for instance)

subjectentity.type = multi
subjectentity.marcMap = 610$ab
subjectentity.marcMap.separator=--
subjectentity.stripTrailingPunctuation = 1

subjectname.type = multi
subjectname.marcMap = 600$abc
# nb the 600$d is not included because it causes weird duplication issues
subjectname.stripTrailingPunctuation = 1

summary.type = multi
summary.marcMap = 520$a

title.type = single
title.marcMap = 245$abnp,246$abn,240$an

topic.type = multi
topic.marcMap = 650$a
topic.stripTrailingPunctuation = 1

url.type = multi
url.marcMap = 856$u

vernacular.type = multi
vernacular.marcMap=880$abcdv













